{{- if .Values.frontend.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ecommerce-app.fullname" . }}-frontend
  namespace: {{ .Values.namespace | default "ecommerce-app" }}
  labels:
    {{- include "ecommerce-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  {{- if not .Values.frontend.autoscaling.enabled }}
  replicas: {{ .Values.frontend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ecommerce-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  strategy:
    type: {{ .Values.strategy.type | default "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge | default 1 }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable | default 0 }}
  template:
    metadata:
      labels:
        {{- include "ecommerce-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
        version: {{ .Values.images.frontend.tag | default .Chart.AppVersion }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.frontend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ include "ecommerce-app.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      
      initContainers:
        # ðŸŽ“ Init container para esperar que el backend estÃ© listo
        - name: wait-for-backend
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ include "ecommerce-app.fullname" . }}-backend 80; do echo waiting for backend; sleep 2; done']
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true
            
      containers:
        - name: frontend
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.images.frontend.repository }}:{{ .Values.images.frontend.tag }}"
          imagePullPolicy: {{ .Values.images.frontend.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
              
          env:
            - name: NODE_ENV
              value: {{ .Values.global.environment | quote }}
            - name: REACT_APP_API_URL
              value: {{ .Values.frontend.env.REACT_APP_API_URL | quote }}
            - name: REACT_APP_ENVIRONMENT
              value: {{ .Values.global.environment | quote }}
            - name: REACT_APP_VERSION
              value: {{ .Values.images.frontend.tag | default .Chart.AppVersion | quote }}
            {{- if .Values.monitoring.applicationInsights.enabled }}
            - name: REACT_APP_APPINSIGHTS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ include "ecommerce-app.fullname" . }}-secrets
                  key: appinsights-connection-string
            {{- end }}
            {{- range $key, $value := .Values.frontend.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            
          envFrom:
            - configMapRef:
                name: {{ include "ecommerce-app.fullname" . }}-config
                
          {{- if .Values.frontend.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.frontend.livenessProbe | nindent 12 }}
          {{- end }}
          
          {{- if .Values.frontend.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.frontend.readinessProbe | nindent 12 }}
          {{- end }}
          
          {{- if .Values.frontend.startupProbe }}
          startupProbe:
            {{- toYaml .Values.frontend.startupProbe | nindent 12 }}
          {{- end }}
          
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
            
          {{- if .Values.lifecycle }}
          lifecycle:
            {{- toYaml .Values.lifecycle | nindent 12 }}
          {{- end }}
          
          volumeMounts:
            # ðŸŽ“ Montajes para read-only filesystem
            - name: tmp
              mountPath: /tmp
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            {{- if .Values.azureKeyVault.enabled }}
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
            {{- end }}
            {{- with .Values.frontend.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            
      volumes:
        - name: tmp
          emptyDir: {}
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        {{- if .Values.azureKeyVault.enabled }}
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.azureKeyVault.secretProviderClassName }}
        {{- end }}
        {{- with .Values.frontend.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}