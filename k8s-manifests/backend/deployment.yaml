# Backend Deployment for E-commerce Application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-backend
  namespace: ecommerce-app
  labels:
    app: ecommerce
    component: backend
    app.kubernetes.io/name: ecommerce
    app.kubernetes.io/component: backend
    app.kubernetes.io/instance: ecommerce-app
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2  # 2 initial replicas as specified in README
  selector:
    matchLabels:
      app: ecommerce
      component: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Zero downtime for backend
  template:
    metadata:
      labels:
        app: ecommerce
        component: backend
        app.kubernetes.io/name: ecommerce
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: ecommerce-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        azure.workload.identity/inject-proxy-sidecar: "true"
    spec:
      serviceAccountName: ecommerce-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: backend
        image: acrecommercedev.azurecr.io/ecommerce-backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ecommerce-secrets
              key: database-url
        - name: REDIS_URL
          value: "redis://ecommerce-redis:6379"
        - name: APP_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ecommerce-secrets
              key: app-secret-key
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: ecommerce-secrets
              key: azure-client-id
              optional: true
        resources:
          requests:
            cpu: 200m     # As specified in README
            memory: 256Mi # As specified in README
          limits:
            cpu: 500m     # As specified in README
            memory: 512Mi # As specified in README
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-cache
          mountPath: /app/.cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-cache
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: ecommerce
                  component: backend
              topologyKey: kubernetes.io/hostname
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: ecommerce
                  component: redis
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: ecommerce-backend
  namespace: ecommerce-app
  labels:
    app: ecommerce
    component: backend
    app.kubernetes.io/name: ecommerce
    app.kubernetes.io/component: backend
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: ClusterIP
  selector:
    app: ecommerce
    component: backend
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  sessionAffinity: None
