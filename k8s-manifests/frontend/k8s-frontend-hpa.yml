# ðŸŽ“ Frontend HorizontalPodAutoscaler
# Auto-scaling basado en CPU como especifica el README
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ecommerce-frontend-hpa
  namespace: ecommerce-app
  labels:
    app: ecommerce
    component: frontend
    app.kubernetes.io/name: ecommerce
    app.kubernetes.io/component: frontend
    app.kubernetes.io/instance: ecommerce-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ecommerce-frontend
    
  # ðŸŽ“ RÃ©plicas min/max coherentes con Helm values
  minReplicas: 3   # MÃ­nimo 3 para HA
  maxReplicas: 10  # MÃ¡ximo 10 para controlar costos
  
  metrics:
    # ðŸŽ“ CPU-based scaling (70% como especifica el README)
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70  # Scale at 70% CPU
          
    # ðŸŽ“ Memory-based scaling (adicional)
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80  # Scale at 80% memory
          
  # ðŸŽ“ Comportamiento de scaling mÃ¡s controlado
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutos de estabilizaciÃ³n
      policies:
        - type: Percent
          value: 50  # Scale down mÃ¡ximo 50% de pods
          periodSeconds: 60
        - type: Pods
          value: 2   # O mÃ¡ximo 2 pods
          periodSeconds: 60
      selectPolicy: Min  # Usa la polÃ­tica mÃ¡s conservadora
      
    scaleUp:
      stabilizationWindowSeconds: 60  # 1 minuto para scale up
      policies:
        - type: Percent
          value: 100  # Puede duplicar pods
          periodSeconds: 60
        - type: Pods
          value: 4    # O mÃ¡ximo 4 pods nuevos
          periodSeconds: 60
      selectPolicy: Max  # Usa la polÃ­tica mÃ¡s agresiva